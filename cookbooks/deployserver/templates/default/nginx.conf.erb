user www-data;
worker_processes 4;
pid /var/run/nginx.pid;

events {
        worker_connections 768;
        # multi_accept on;
}

http {
        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;
        gzip_disable "msie6";

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/x-javascr$

        ##
        # nginx-naxsi config
        ##
        # Uncomment it if you installed nginx-naxsi
        ##

        #include /etc/nginx/naxsi_core.rules;

        ##
        # Virtual Host Configs
        ##
        # jw: commented out so we can set the directive in the conf 
        #include /etc/nginx/conf.d/*.conf;
        #include /etc/nginx/sites-enabled/*;

  server {
        listen   80; ## listen for ipv4; this line is default and im$
        listen   [::]:80 default ipv6only=on; ## listen for ipv6

        root <%= node['bluebook']['webroot'] %>;
        index index.php index.html index.htm;
        try_files $uri $uri/ /index.php;

        # Make site accessible from http://localhost/
        server_name <%= node['bluebook']['nginx_server_name'] %>;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to index.html
                try_files $uri $uri/ /index.php;
                # Uncomment to enable naxsi on this location
                # include /etc/nginx/naxsi.rules
        }

        location /blog {
          try_files $uri $uri/ /<%= node['bluebook']['blog'] %>/index.php?args;
        }

        location /favicon.ico {
          empty_gif;
        }

        #
        # redirect server error pages to the static page /50x.html
        #
        #error_page 500 502 503 504 /50x.html;
        #location = /50x.html {
        #        root /usr/share/nginx/www;
        #}

        #
        # pass the PHP scripts to FastCGI server listening on 127.0.$
        #
        location ~ \.php$ {
                try_files $uri $uri/ =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass 127.0.0.1:9000;
                fastcgi_index index.php;
                include fastcgi_params;
                fastcgi_intercept_errors on;
                #fastcgi_split_path_info ^(/wordpress)(/.*)$;

        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #
#        location ~ /\.ht {
#                deny all;
#        }
  }
}

#mail {
#       # See sample authentication script at:
#       # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#       # auth_http localhost/auth.php;
#       # pop3_capabilities "TOP" "USER";
#       # imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#       server {
#               listen     localhost:110;
#               protocol   pop3;
#               proxy      on;
#       }
#
#       server {
#               listen     localhost:143;
#               protocol   imap;
#               proxy      on;
#       }
#}
